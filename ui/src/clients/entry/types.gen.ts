// This file is auto-generated by @hey-api/openapi-ts

export type ProblemDetail = {
    type?: string;
    title?: string;
    status?: number;
    detail?: string;
    instance?: string;
    properties?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
};

export type Author = {
    name?: string;
    date?: string;
};

export type Category = {
    name: string;
};

export type EntryRequest = {
    content?: string;
    frontMatter?: FrontMatter;
    created?: Author;
    updated?: Author;
};

export type FrontMatter = {
    title: string;
    categories: Array<Category>;
    tags: Array<Tag>;
};

export type Tag = {
    name: string;
    version?: string;
};

export type TagAndCount = {
    name: string;
    version?: string;
    count: number;
};

export type Entry = {
    entryId: number;
    frontMatter: FrontMatter;
    content: string;
    created: Author;
    updated: Author;
};

export type OffsetPageEntry = {
    content?: Array<Entry>;
    size?: number;
    number?: number;
    totalElements?: number;
};

export type CursorPageEntryInstant = {
    content?: Array<Entry>;
    size?: number;
    hasPrevious?: boolean;
    hasNext?: boolean;
};

export type GetEntryForTenantData = {
    entryId: number;
    excludeContent?: boolean;
    tenantId: string;
};

export type GetEntryForTenantResponse = Entry;

export type PutEntryFromMarkdownForTenant1Data = {
    entryId: number;
    requestBody: EntryRequest;
    tenantId: string;
};

export type PutEntryFromMarkdownForTenant1Response = {
    [key: string]: unknown;
};

export type DeleteEntryForTenantData = {
    entryId: number;
    tenantId: string;
};

export type DeleteEntryForTenantResponse = unknown;

export type GetEntryData = {
    entryId: number;
    excludeContent?: boolean;
    ifModifiedSince?: string;
};

export type GetEntryResponse = Entry;

export type PutEntryFromMarkdown1Data = {
    entryId: number;
    requestBody: EntryRequest;
};

export type PutEntryFromMarkdown1Response = {
    [key: string]: unknown;
};

export type DeleteEntryData = {
    entryId: number;
};

export type DeleteEntryResponse = unknown;

export type GetEntriesForTenant1Data = {
    categories?: Array<(string)>;
    createdBy?: string;
    cursor?: string;
    excludeContent?: boolean;
    page?: number;
    query?: string;
    size?: number;
    tag?: string;
    tenantId: string;
    updatedBy?: string;
};

export type GetEntriesForTenant1Response = CursorPageEntryInstant | OffsetPageEntry;

export type PostEntryFromMarkdownForTenant1Data = {
    requestBody: EntryRequest;
    tenantId: string;
};

export type PostEntryFromMarkdownForTenant1Response = {
    [key: string]: unknown;
};

export type GetEntries1Data = {
    categories?: Array<(string)>;
    createdBy?: string;
    cursor?: string;
    excludeContent?: boolean;
    page?: number;
    query?: string;
    size?: number;
    tag?: string;
    updatedBy?: string;
};

export type GetEntries1Response = CursorPageEntryInstant | OffsetPageEntry;

export type PostEntryFromMarkdown1Data = {
    requestBody: EntryRequest;
};

export type PostEntryFromMarkdown1Response = {
    [key: string]: unknown;
};

export type GetEntryAsMarkdownForTenantData = {
    entryId: number;
    excludeContent?: boolean;
    tenantId: string;
};

export type GetEntryAsMarkdownForTenantResponse = string;

export type ExportEntriesForTenantData = {
    tenantId: string;
};

export type ExportEntriesForTenantResponse = {
    [key: string]: unknown;
};

export type GetEntryAsMarkdownData = {
    entryId: number;
    excludeContent?: boolean;
};

export type GetEntryAsMarkdownResponse = string;

export type GetTemplateMarkdownResponse = string;

export type ExportEntriesResponse = {
    [key: string]: unknown;
};

export type WebhookData = {
    requestBody: string;
};

export type WebhookResponse = Array<{
    [key: string]: (number);
}>;

export type WebhookForTenantData = {
    requestBody: string;
    tenantId: string;
    xHubSignature256: string;
};

export type WebhookForTenantResponse = Array<{
    [key: string]: (number);
}>;

export type ImportEntriesForTenantData = {
    from?: number;
    tenantId: string;
    to?: number;
};

export type ImportEntriesForTenantResponse = Array<(string)>;

export type ImportEntriesData = {
    from?: number;
    to?: number;
};

export type ImportEntriesResponse = Array<(string)>;

export type TagsForTenantData = {
    tenantId: string;
};

export type TagsForTenantResponse = Array<TagAndCount>;

export type TagsResponse = Array<TagAndCount>;

export type CategoriesForTenantData = {
    tenantId: string;
};

export type CategoriesForTenantResponse = Array<Array<Category>>;

export type CategoriesResponse = Array<Array<Category>>;

export type InfoResponse = {
    [key: string]: {
        [key: string]: unknown;
    };
};

export type $OpenApiTs = {
    '/tenants/{tenantId}/entries/{entryId}': {
        get: {
            req: {
                entryId: number;
                excludeContent?: boolean;
                tenantId: string;
            };
            res: {
                /**
                 * OK
                 */
                200: Entry;
                /**
                 * Bad Request
                 */
                400: ProblemDetail;
                /**
                 * Forbidden
                 */
                403: ProblemDetail;
                /**
                 * Internal Server Error
                 */
                500: ProblemDetail;
                /**
                 * Service Unavailable
                 */
                503: ProblemDetail;
            };
        };
        put: {
            req: {
                entryId: number;
                requestBody: EntryRequest;
                tenantId: string;
            };
            res: {
                /**
                 * OK
                 */
                200: {
                    [key: string]: unknown;
                };
                /**
                 * Bad Request
                 */
                400: ProblemDetail;
                /**
                 * Forbidden
                 */
                403: ProblemDetail;
                /**
                 * Internal Server Error
                 */
                500: ProblemDetail;
                /**
                 * Service Unavailable
                 */
                503: ProblemDetail;
            };
        };
        delete: {
            req: {
                entryId: number;
                tenantId: string;
            };
            res: {
                /**
                 * OK
                 */
                200: unknown;
                /**
                 * Bad Request
                 */
                400: ProblemDetail;
                /**
                 * Forbidden
                 */
                403: ProblemDetail;
                /**
                 * Internal Server Error
                 */
                500: ProblemDetail;
                /**
                 * Service Unavailable
                 */
                503: ProblemDetail;
            };
        };
    };
    '/entries/{entryId}': {
        get: {
            req: {
                entryId: number;
                excludeContent?: boolean;
                ifModifiedSince?: string;
            };
            res: {
                /**
                 * OK
                 */
                200: Entry;
                /**
                 * Bad Request
                 */
                400: ProblemDetail;
                /**
                 * Forbidden
                 */
                403: ProblemDetail;
                /**
                 * Internal Server Error
                 */
                500: ProblemDetail;
                /**
                 * Service Unavailable
                 */
                503: ProblemDetail;
            };
        };
        put: {
            req: {
                entryId: number;
                requestBody: EntryRequest;
            };
            res: {
                /**
                 * OK
                 */
                200: {
                    [key: string]: unknown;
                };
                /**
                 * Bad Request
                 */
                400: ProblemDetail;
                /**
                 * Forbidden
                 */
                403: ProblemDetail;
                /**
                 * Internal Server Error
                 */
                500: ProblemDetail;
                /**
                 * Service Unavailable
                 */
                503: ProblemDetail;
            };
        };
        delete: {
            req: {
                entryId: number;
            };
            res: {
                /**
                 * OK
                 */
                200: unknown;
                /**
                 * Bad Request
                 */
                400: ProblemDetail;
                /**
                 * Forbidden
                 */
                403: ProblemDetail;
                /**
                 * Internal Server Error
                 */
                500: ProblemDetail;
                /**
                 * Service Unavailable
                 */
                503: ProblemDetail;
            };
        };
    };
    '/tenants/{tenantId}/entries': {
        get: {
            req: {
                categories?: Array<(string)>;
                createdBy?: string;
                cursor?: string;
                excludeContent?: boolean;
                page?: number;
                query?: string;
                size?: number;
                tag?: string;
                tenantId: string;
                updatedBy?: string;
            };
            res: {
                /**
                 * OK
                 */
                200: CursorPageEntryInstant | OffsetPageEntry;
                /**
                 * Bad Request
                 */
                400: ProblemDetail;
                /**
                 * Forbidden
                 */
                403: ProblemDetail;
                /**
                 * Internal Server Error
                 */
                500: ProblemDetail;
                /**
                 * Service Unavailable
                 */
                503: ProblemDetail;
            };
        };
        post: {
            req: {
                requestBody: EntryRequest;
                tenantId: string;
            };
            res: {
                /**
                 * OK
                 */
                200: {
                    [key: string]: unknown;
                };
                /**
                 * Bad Request
                 */
                400: ProblemDetail;
                /**
                 * Forbidden
                 */
                403: ProblemDetail;
                /**
                 * Internal Server Error
                 */
                500: ProblemDetail;
                /**
                 * Service Unavailable
                 */
                503: ProblemDetail;
            };
        };
    };
    '/entries': {
        get: {
            req: {
                categories?: Array<(string)>;
                createdBy?: string;
                cursor?: string;
                excludeContent?: boolean;
                page?: number;
                query?: string;
                size?: number;
                tag?: string;
                updatedBy?: string;
            };
            res: {
                /**
                 * OK
                 */
                200: CursorPageEntryInstant | OffsetPageEntry;
                /**
                 * Bad Request
                 */
                400: ProblemDetail;
                /**
                 * Forbidden
                 */
                403: ProblemDetail;
                /**
                 * Internal Server Error
                 */
                500: ProblemDetail;
                /**
                 * Service Unavailable
                 */
                503: ProblemDetail;
            };
        };
        post: {
            req: {
                requestBody: EntryRequest;
            };
            res: {
                /**
                 * OK
                 */
                200: {
                    [key: string]: unknown;
                };
                /**
                 * Bad Request
                 */
                400: ProblemDetail;
                /**
                 * Forbidden
                 */
                403: ProblemDetail;
                /**
                 * Internal Server Error
                 */
                500: ProblemDetail;
                /**
                 * Service Unavailable
                 */
                503: ProblemDetail;
            };
        };
    };
    '/tenants/{tenantId}/entries/{entryId}.md': {
        get: {
            req: {
                entryId: number;
                excludeContent?: boolean;
                tenantId: string;
            };
            res: {
                /**
                 * OK
                 */
                200: string;
                /**
                 * Bad Request
                 */
                400: ProblemDetail;
                /**
                 * Forbidden
                 */
                403: ProblemDetail;
                /**
                 * Internal Server Error
                 */
                500: ProblemDetail;
                /**
                 * Service Unavailable
                 */
                503: ProblemDetail;
            };
        };
    };
    '/tenants/{tenantId}/entries.zip': {
        get: {
            req: {
                tenantId: string;
            };
            res: {
                /**
                 * OK
                 */
                200: {
                    [key: string]: unknown;
                };
                /**
                 * Bad Request
                 */
                400: ProblemDetail;
                /**
                 * Forbidden
                 */
                403: ProblemDetail;
                /**
                 * Internal Server Error
                 */
                500: ProblemDetail;
                /**
                 * Service Unavailable
                 */
                503: ProblemDetail;
            };
        };
    };
    '/entries/{entryId}.md': {
        get: {
            req: {
                entryId: number;
                excludeContent?: boolean;
            };
            res: {
                /**
                 * OK
                 */
                200: string;
                /**
                 * Bad Request
                 */
                400: ProblemDetail;
                /**
                 * Forbidden
                 */
                403: ProblemDetail;
                /**
                 * Internal Server Error
                 */
                500: ProblemDetail;
                /**
                 * Service Unavailable
                 */
                503: ProblemDetail;
            };
        };
    };
    '/entries/template.md': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: string;
                /**
                 * Bad Request
                 */
                400: ProblemDetail;
                /**
                 * Forbidden
                 */
                403: ProblemDetail;
                /**
                 * Internal Server Error
                 */
                500: ProblemDetail;
                /**
                 * Service Unavailable
                 */
                503: ProblemDetail;
            };
        };
    };
    '/entries.zip': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: {
                    [key: string]: unknown;
                };
                /**
                 * Bad Request
                 */
                400: ProblemDetail;
                /**
                 * Forbidden
                 */
                403: ProblemDetail;
                /**
                 * Internal Server Error
                 */
                500: ProblemDetail;
                /**
                 * Service Unavailable
                 */
                503: ProblemDetail;
            };
        };
    };
    '/webhook': {
        post: {
            req: {
                requestBody: string;
            };
            res: {
                /**
                 * OK
                 */
                200: Array<{
                    [key: string]: (number);
                }>;
                /**
                 * Bad Request
                 */
                400: ProblemDetail;
                /**
                 * Forbidden
                 */
                403: ProblemDetail;
                /**
                 * Internal Server Error
                 */
                500: ProblemDetail;
                /**
                 * Service Unavailable
                 */
                503: ProblemDetail;
            };
        };
    };
    '/tenants/{tenantId}/webhook': {
        post: {
            req: {
                requestBody: string;
                tenantId: string;
                xHubSignature256: string;
            };
            res: {
                /**
                 * OK
                 */
                200: Array<{
                    [key: string]: (number);
                }>;
                /**
                 * Bad Request
                 */
                400: ProblemDetail;
                /**
                 * Forbidden
                 */
                403: ProblemDetail;
                /**
                 * Internal Server Error
                 */
                500: ProblemDetail;
                /**
                 * Service Unavailable
                 */
                503: ProblemDetail;
            };
        };
    };
    '/tenants/{tenantId}/admin/import': {
        post: {
            req: {
                from?: number;
                tenantId: string;
                to?: number;
            };
            res: {
                /**
                 * OK
                 */
                200: Array<(string)>;
                /**
                 * Bad Request
                 */
                400: ProblemDetail;
                /**
                 * Forbidden
                 */
                403: ProblemDetail;
                /**
                 * Internal Server Error
                 */
                500: ProblemDetail;
                /**
                 * Service Unavailable
                 */
                503: ProblemDetail;
            };
        };
    };
    '/admin/import': {
        post: {
            req: {
                from?: number;
                to?: number;
            };
            res: {
                /**
                 * OK
                 */
                200: Array<(string)>;
                /**
                 * Bad Request
                 */
                400: ProblemDetail;
                /**
                 * Forbidden
                 */
                403: ProblemDetail;
                /**
                 * Internal Server Error
                 */
                500: ProblemDetail;
                /**
                 * Service Unavailable
                 */
                503: ProblemDetail;
            };
        };
    };
    '/tenants/{tenantId}/tags': {
        get: {
            req: {
                tenantId: string;
            };
            res: {
                /**
                 * OK
                 */
                200: Array<TagAndCount>;
                /**
                 * Bad Request
                 */
                400: ProblemDetail;
                /**
                 * Forbidden
                 */
                403: ProblemDetail;
                /**
                 * Internal Server Error
                 */
                500: ProblemDetail;
                /**
                 * Service Unavailable
                 */
                503: ProblemDetail;
            };
        };
    };
    '/tags': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<TagAndCount>;
                /**
                 * Bad Request
                 */
                400: ProblemDetail;
                /**
                 * Forbidden
                 */
                403: ProblemDetail;
                /**
                 * Internal Server Error
                 */
                500: ProblemDetail;
                /**
                 * Service Unavailable
                 */
                503: ProblemDetail;
            };
        };
    };
    '/tenants/{tenantId}/categories': {
        get: {
            req: {
                tenantId: string;
            };
            res: {
                /**
                 * OK
                 */
                200: Array<Array<Category>>;
                /**
                 * Bad Request
                 */
                400: ProblemDetail;
                /**
                 * Forbidden
                 */
                403: ProblemDetail;
                /**
                 * Internal Server Error
                 */
                500: ProblemDetail;
                /**
                 * Service Unavailable
                 */
                503: ProblemDetail;
            };
        };
    };
    '/categories': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: Array<Array<Category>>;
                /**
                 * Bad Request
                 */
                400: ProblemDetail;
                /**
                 * Forbidden
                 */
                403: ProblemDetail;
                /**
                 * Internal Server Error
                 */
                500: ProblemDetail;
                /**
                 * Service Unavailable
                 */
                503: ProblemDetail;
            };
        };
    };
    '/info': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: {
                    [key: string]: {
                        [key: string]: unknown;
                    };
                };
                /**
                 * Bad Request
                 */
                400: ProblemDetail;
                /**
                 * Forbidden
                 */
                403: ProblemDetail;
                /**
                 * Internal Server Error
                 */
                500: ProblemDetail;
                /**
                 * Service Unavailable
                 */
                503: ProblemDetail;
            };
        };
    };
};